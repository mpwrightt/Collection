name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

jobs:
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        pip install bandit safety semgrep pip-audit
        pip install -r requirements.txt
    
    - name: Run Bandit (security linter)
      run: |
        bandit -c .bandit -r tcgplayer_client/ -f json -o bandit-report.json || true
        bandit -c .bandit -r tcgplayer_client/ -f txt
    
    - name: Run Safety (dependency vulnerability checker)
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Run pip-audit (dependency vulnerability scanner)
      run: |
        pip-audit --desc --format=json --output=pip-audit-report.json || true
        pip-audit --desc
    
    - name: Run Semgrep (static analysis)
      run: |
        python -m semgrep --config=auto --json --output=semgrep-report.json tcgplayer_client/ || true
    
    - name: Check for secrets with TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.before || 'HEAD~1' }}
        head: ${{ github.event.after || 'HEAD' }}
        extra_args: --debug --only-verified
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
          semgrep-report.json
        retention-days: 30

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
